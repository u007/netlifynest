generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Team {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  ownerId   String   @map("_ownerId") @db.ObjectId

  owner  User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
}

model Role {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String

  ownerId String @map("_ownerId")
  owner   User @relation(name: "OwnedRoles", fields: [ownerId], references: [id])
  
  @@unique([ownerId, name])
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String
  firstname String?
  lastname  String?

  roles String[]

  ownedRoles Role[] @relation("OwnedRoles")

  // ownedRoles Role[]   @relation(name: "ownedRoles", fields: [id], references: [ownerId])
  posts  Post[]
  teams  String[] @db.ObjectId
  Team   Team[]
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean
  title     String
  content   String?
  authorId  String  @db.ObjectId
  author    User?    @relation(fields: [authorId], references: [id])
}

model Product {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  skuCode     String
  price       String
  currency    Currency
  priceType   PriceType
  quantity    Int
  description String?
  barcode     String
  uom         Uom
  itemColor   ItemColor
  unitName    String
  photos      Photo[]
}

type Photo {
  height Int
  width  Int
  url    String
}

enum Uom {
  Unit
  Liter
  Milliliter
  Gram
}

enum Currency {
  MYR
  USD
  SGD
  EUR

}

enum ItemColor {
  Yellow
  Red
  Blue
  White
}

enum PriceType {
  Retail_Selling_Price
}
